<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ulovecode.modules.student.dao.StudentMapper">

    <resultMap id="BaseResultMap" type="com.ulovecode.modules.student.entity.Student">
        <id column="sno" jdbcType="VARCHAR" property="sno" />
        <result column="idno" jdbcType="VARCHAR" property="idno" />
        <result column="passwd" jdbcType="VARCHAR" property="passwd" />
        <result column="major" jdbcType="VARCHAR" property="major" />
        <result column="classno" jdbcType="VARCHAR" property="classno" />
        <result column="sname" jdbcType="VARCHAR" property="sname" />
        <result column="pyname" jdbcType="VARCHAR" property="pyname" />
        <result column="gender" jdbcType="VARCHAR" property="gender" />
        <result column="birthday" jdbcType="VARCHAR" property="birthday" />
        <result column="pic" jdbcType="VARCHAR" property="pic" />
        <result column="high_school" jdbcType="VARCHAR" property="highSchool" />
        <result column="high_score" jdbcType="INTEGER" property="highScore" />
        <result column="insource" jdbcType="VARCHAR" property="insource" />
        <result column="intype" jdbcType="VARCHAR" property="intype" />
        <result column="nation" jdbcType="VARCHAR" property="nation" />
        <result column="political_status" jdbcType="VARCHAR" property="politicalStatus" />
        <result column="tel" jdbcType="VARCHAR" property="tel" />
        <result column="qq" jdbcType="VARCHAR" property="qq" />
        <result column="email" jdbcType="VARCHAR" property="email" />
        <result column="descript" jdbcType="VARCHAR" property="descript" />
        <result column="rec_dtime" jdbcType="TIMESTAMP" property="recDtime" />
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    sno, idno, passwd, major, classno, sname, pyname, gender, birthday, pic, high_school, 
    high_score, insource, intype, nation, political_status, tel, qq, email, descript, 
    rec_dtime
  </sql>
    <select id="selectByExample" parameterType="com.ulovecode.modules.student.entity.StudentExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List" />
        from student
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from student
        where sno = #{sno,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from student
    where sno = #{sno,jdbcType=VARCHAR}
  </delete>
    <delete id="deleteByExample" parameterType="com.ulovecode.modules.student.entity.StudentExample">
        delete from student
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </delete>
    <insert id="insert" parameterType="com.ulovecode.modules.student.entity.Student">
    insert into student (sno, idno, passwd, 
      major, classno, sname, 
      pyname, gender, birthday, 
      pic, high_school, high_score, 
      insource, intype, nation, 
      political_status, tel, qq, 
      email, descript, rec_dtime
      )
    values (#{sno,jdbcType=VARCHAR}, #{idno,jdbcType=VARCHAR}, #{passwd,jdbcType=VARCHAR}, 
      #{major,jdbcType=VARCHAR}, #{classno,jdbcType=VARCHAR}, #{sname,jdbcType=VARCHAR}, 
      #{pyname,jdbcType=VARCHAR}, #{gender,jdbcType=VARCHAR}, #{birthday,jdbcType=VARCHAR}, 
      #{pic,jdbcType=VARCHAR}, #{highSchool,jdbcType=VARCHAR}, #{highScore,jdbcType=INTEGER}, 
      #{insource,jdbcType=VARCHAR}, #{intype,jdbcType=VARCHAR}, #{nation,jdbcType=VARCHAR}, 
      #{politicalStatus,jdbcType=VARCHAR}, #{tel,jdbcType=VARCHAR}, #{qq,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{descript,jdbcType=VARCHAR}, #{recDtime,jdbcType=TIMESTAMP}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.ulovecode.modules.student.entity.Student">
        insert into student
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="sno != null">
                sno,
            </if>
            <if test="idno != null">
                idno,
            </if>
            <if test="passwd != null">
                passwd,
            </if>
            <if test="major != null">
                major,
            </if>
            <if test="classno != null">
                classno,
            </if>
            <if test="sname != null">
                sname,
            </if>
            <if test="pyname != null">
                pyname,
            </if>
            <if test="gender != null">
                gender,
            </if>
            <if test="birthday != null">
                birthday,
            </if>
            <if test="pic != null">
                pic,
            </if>
            <if test="highSchool != null">
                high_school,
            </if>
            <if test="highScore != null">
                high_score,
            </if>
            <if test="insource != null">
                insource,
            </if>
            <if test="intype != null">
                intype,
            </if>
            <if test="nation != null">
                nation,
            </if>
            <if test="politicalStatus != null">
                political_status,
            </if>
            <if test="tel != null">
                tel,
            </if>
            <if test="qq != null">
                qq,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="descript != null">
                descript,
            </if>
            <if test="recDtime != null">
                rec_dtime,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="sno != null">
                #{sno,jdbcType=VARCHAR},
            </if>
            <if test="idno != null">
                #{idno,jdbcType=VARCHAR},
            </if>
            <if test="passwd != null">
                #{passwd,jdbcType=VARCHAR},
            </if>
            <if test="major != null">
                #{major,jdbcType=VARCHAR},
            </if>
            <if test="classno != null">
                #{classno,jdbcType=VARCHAR},
            </if>
            <if test="sname != null">
                #{sname,jdbcType=VARCHAR},
            </if>
            <if test="pyname != null">
                #{pyname,jdbcType=VARCHAR},
            </if>
            <if test="gender != null">
                #{gender,jdbcType=VARCHAR},
            </if>
            <if test="birthday != null">
                #{birthday,jdbcType=VARCHAR},
            </if>
            <if test="pic != null">
                #{pic,jdbcType=VARCHAR},
            </if>
            <if test="highSchool != null">
                #{highSchool,jdbcType=VARCHAR},
            </if>
            <if test="highScore != null">
                #{highScore,jdbcType=INTEGER},
            </if>
            <if test="insource != null">
                #{insource,jdbcType=VARCHAR},
            </if>
            <if test="intype != null">
                #{intype,jdbcType=VARCHAR},
            </if>
            <if test="nation != null">
                #{nation,jdbcType=VARCHAR},
            </if>
            <if test="politicalStatus != null">
                #{politicalStatus,jdbcType=VARCHAR},
            </if>
            <if test="tel != null">
                #{tel,jdbcType=VARCHAR},
            </if>
            <if test="qq != null">
                #{qq,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="descript != null">
                #{descript,jdbcType=VARCHAR},
            </if>
            <if test="recDtime != null">
                #{recDtime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.ulovecode.modules.student.entity.StudentExample" resultType="java.lang.Integer">
        select count(*) from student
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update student
        <set>
            <if test="record.sno != null">
                sno = #{record.sno,jdbcType=VARCHAR},
            </if>
            <if test="record.idno != null">
                idno = #{record.idno,jdbcType=VARCHAR},
            </if>
            <if test="record.passwd != null">
                passwd = #{record.passwd,jdbcType=VARCHAR},
            </if>
            <if test="record.major != null">
                major = #{record.major,jdbcType=VARCHAR},
            </if>
            <if test="record.classno != null">
                classno = #{record.classno,jdbcType=VARCHAR},
            </if>
            <if test="record.sname != null">
                sname = #{record.sname,jdbcType=VARCHAR},
            </if>
            <if test="record.pyname != null">
                pyname = #{record.pyname,jdbcType=VARCHAR},
            </if>
            <if test="record.gender != null">
                gender = #{record.gender,jdbcType=VARCHAR},
            </if>
            <if test="record.birthday != null">
                birthday = #{record.birthday,jdbcType=VARCHAR},
            </if>
            <if test="record.pic != null">
                pic = #{record.pic,jdbcType=VARCHAR},
            </if>
            <if test="record.highSchool != null">
                high_school = #{record.highSchool,jdbcType=VARCHAR},
            </if>
            <if test="record.highScore != null">
                high_score = #{record.highScore,jdbcType=INTEGER},
            </if>
            <if test="record.insource != null">
                insource = #{record.insource,jdbcType=VARCHAR},
            </if>
            <if test="record.intype != null">
                intype = #{record.intype,jdbcType=VARCHAR},
            </if>
            <if test="record.nation != null">
                nation = #{record.nation,jdbcType=VARCHAR},
            </if>
            <if test="record.politicalStatus != null">
                political_status = #{record.politicalStatus,jdbcType=VARCHAR},
            </if>
            <if test="record.tel != null">
                tel = #{record.tel,jdbcType=VARCHAR},
            </if>
            <if test="record.qq != null">
                qq = #{record.qq,jdbcType=VARCHAR},
            </if>
            <if test="record.email != null">
                email = #{record.email,jdbcType=VARCHAR},
            </if>
            <if test="record.descript != null">
                descript = #{record.descript,jdbcType=VARCHAR},
            </if>
            <if test="record.recDtime != null">
                rec_dtime = #{record.recDtime,jdbcType=TIMESTAMP},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update student
        set sno = #{record.sno,jdbcType=VARCHAR},
        idno = #{record.idno,jdbcType=VARCHAR},
        passwd = #{record.passwd,jdbcType=VARCHAR},
        major = #{record.major,jdbcType=VARCHAR},
        classno = #{record.classno,jdbcType=VARCHAR},
        sname = #{record.sname,jdbcType=VARCHAR},
        pyname = #{record.pyname,jdbcType=VARCHAR},
        gender = #{record.gender,jdbcType=VARCHAR},
        birthday = #{record.birthday,jdbcType=VARCHAR},
        pic = #{record.pic,jdbcType=VARCHAR},
        high_school = #{record.highSchool,jdbcType=VARCHAR},
        high_score = #{record.highScore,jdbcType=INTEGER},
        insource = #{record.insource,jdbcType=VARCHAR},
        intype = #{record.intype,jdbcType=VARCHAR},
        nation = #{record.nation,jdbcType=VARCHAR},
        political_status = #{record.politicalStatus,jdbcType=VARCHAR},
        tel = #{record.tel,jdbcType=VARCHAR},
        qq = #{record.qq,jdbcType=VARCHAR},
        email = #{record.email,jdbcType=VARCHAR},
        descript = #{record.descript,jdbcType=VARCHAR},
        rec_dtime = #{record.recDtime,jdbcType=TIMESTAMP}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.ulovecode.modules.student.entity.Student">
        update student
        <set>
            <if test="idno != null">
                idno = #{idno,jdbcType=VARCHAR},
            </if>
            <if test="passwd != null">
                passwd = #{passwd,jdbcType=VARCHAR},
            </if>
            <if test="major != null">
                major = #{major,jdbcType=VARCHAR},
            </if>
            <if test="classno != null">
                classno = #{classno,jdbcType=VARCHAR},
            </if>
            <if test="sname != null">
                sname = #{sname,jdbcType=VARCHAR},
            </if>
            <if test="pyname != null">
                pyname = #{pyname,jdbcType=VARCHAR},
            </if>
            <if test="gender != null">
                gender = #{gender,jdbcType=VARCHAR},
            </if>
            <if test="birthday != null">
                birthday = #{birthday,jdbcType=VARCHAR},
            </if>
            <if test="pic != null">
                pic = #{pic,jdbcType=VARCHAR},
            </if>
            <if test="highSchool != null">
                high_school = #{highSchool,jdbcType=VARCHAR},
            </if>
            <if test="highScore != null">
                high_score = #{highScore,jdbcType=INTEGER},
            </if>
            <if test="insource != null">
                insource = #{insource,jdbcType=VARCHAR},
            </if>
            <if test="intype != null">
                intype = #{intype,jdbcType=VARCHAR},
            </if>
            <if test="nation != null">
                nation = #{nation,jdbcType=VARCHAR},
            </if>
            <if test="politicalStatus != null">
                political_status = #{politicalStatus,jdbcType=VARCHAR},
            </if>
            <if test="tel != null">
                tel = #{tel,jdbcType=VARCHAR},
            </if>
            <if test="qq != null">
                qq = #{qq,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="descript != null">
                descript = #{descript,jdbcType=VARCHAR},
            </if>
            <if test="recDtime != null">
                rec_dtime = #{recDtime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where sno = #{sno,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.ulovecode.modules.student.entity.Student">
    update student
    set idno = #{idno,jdbcType=VARCHAR},
      passwd = #{passwd,jdbcType=VARCHAR},
      major = #{major,jdbcType=VARCHAR},
      classno = #{classno,jdbcType=VARCHAR},
      sname = #{sname,jdbcType=VARCHAR},
      pyname = #{pyname,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=VARCHAR},
      birthday = #{birthday,jdbcType=VARCHAR},
      pic = #{pic,jdbcType=VARCHAR},
      high_school = #{highSchool,jdbcType=VARCHAR},
      high_score = #{highScore,jdbcType=INTEGER},
      insource = #{insource,jdbcType=VARCHAR},
      intype = #{intype,jdbcType=VARCHAR},
      nation = #{nation,jdbcType=VARCHAR},
      political_status = #{politicalStatus,jdbcType=VARCHAR},
      tel = #{tel,jdbcType=VARCHAR},
      qq = #{qq,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      descript = #{descript,jdbcType=VARCHAR},
      rec_dtime = #{recDtime,jdbcType=TIMESTAMP}
    where sno = #{sno,jdbcType=VARCHAR}
  </update>
    <select id="queryObjectByIdNoAndSno" parameterType="com.ulovecode.modules.student.entity.Student" resultMap="BaseResultMap">
    select * from STUDENT
     where idno = #{idno,jdbcType=VARCHAR}
    and sno = #{sno,jdbcType=VARCHAR}
  </select>
</mapper>