<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ulovecode.modules.dao.ItemMapper">
  <resultMap id="BaseResultMap" type="com.ulovecode.modules.entity.domain.Item">
    <id column="item_id" jdbcType="INTEGER" property="itemId" />
    <result column="course_id" jdbcType="INTEGER" property="courseId" />
    <result column="item_type" jdbcType="VARCHAR" property="itemType" />
    <result column="question" jdbcType="VARCHAR" property="question" />
    <result column="optiona" jdbcType="VARCHAR" property="optiona" />
    <result column="optionb" jdbcType="VARCHAR" property="optionb" />
    <result column="optionc" jdbcType="VARCHAR" property="optionc" />
    <result column="optiond" jdbcType="VARCHAR" property="optiond" />
    <result column="optione" jdbcType="VARCHAR" property="optione" />
    <result column="optionf" jdbcType="VARCHAR" property="optionf" />
    <result column="optiong" jdbcType="VARCHAR" property="optiong" />
    <result column="answer" jdbcType="VARCHAR" property="answer" />
    <result column="difficulty" jdbcType="INTEGER" property="difficulty" />
    <result column="knowledge" jdbcType="VARCHAR" property="knowledge" />
    <result column="clue" jdbcType="VARCHAR" property="clue" />
    <result column="rec_dtime" jdbcType="TIMESTAMP" property="recDtime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    item_id, course_id, item_type, question, optiona, optionb, optionc, optiond, optione, 
    optionf, optiong, answer, difficulty, knowledge, clue, rec_dtime
  </sql>
  <select id="selectByExample" parameterType="com.ulovecode.modules.entity.domain.ItemExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from item
    where item_id = #{itemId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from item
    where item_id = #{itemId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.ulovecode.modules.entity.domain.ItemExample">
    delete from item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ulovecode.modules.entity.domain.Item">
    insert into item (item_id, course_id, item_type, 
      question, optiona, optionb, 
      optionc, optiond, optione, 
      optionf, optiong, answer, 
      difficulty, knowledge, clue, 
      rec_dtime)
    values (#{itemId,jdbcType=INTEGER}, #{courseId,jdbcType=INTEGER}, #{itemType,jdbcType=VARCHAR}, 
      #{question,jdbcType=VARCHAR}, #{optiona,jdbcType=VARCHAR}, #{optionb,jdbcType=VARCHAR}, 
      #{optionc,jdbcType=VARCHAR}, #{optiond,jdbcType=VARCHAR}, #{optione,jdbcType=VARCHAR}, 
      #{optionf,jdbcType=VARCHAR}, #{optiong,jdbcType=VARCHAR}, #{answer,jdbcType=VARCHAR}, 
      #{difficulty,jdbcType=INTEGER}, #{knowledge,jdbcType=VARCHAR}, #{clue,jdbcType=VARCHAR}, 
      #{recDtime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.ulovecode.modules.entity.domain.Item">
    insert into item
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="itemId != null">
        item_id,
      </if>
      <if test="courseId != null">
        course_id,
      </if>
      <if test="itemType != null">
        item_type,
      </if>
      <if test="question != null">
        question,
      </if>
      <if test="optiona != null">
        optiona,
      </if>
      <if test="optionb != null">
        optionb,
      </if>
      <if test="optionc != null">
        optionc,
      </if>
      <if test="optiond != null">
        optiond,
      </if>
      <if test="optione != null">
        optione,
      </if>
      <if test="optionf != null">
        optionf,
      </if>
      <if test="optiong != null">
        optiong,
      </if>
      <if test="answer != null">
        answer,
      </if>
      <if test="difficulty != null">
        difficulty,
      </if>
      <if test="knowledge != null">
        knowledge,
      </if>
      <if test="clue != null">
        clue,
      </if>
      <if test="recDtime != null">
        rec_dtime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="itemId != null">
        #{itemId,jdbcType=INTEGER},
      </if>
      <if test="courseId != null">
        #{courseId,jdbcType=INTEGER},
      </if>
      <if test="itemType != null">
        #{itemType,jdbcType=VARCHAR},
      </if>
      <if test="question != null">
        #{question,jdbcType=VARCHAR},
      </if>
      <if test="optiona != null">
        #{optiona,jdbcType=VARCHAR},
      </if>
      <if test="optionb != null">
        #{optionb,jdbcType=VARCHAR},
      </if>
      <if test="optionc != null">
        #{optionc,jdbcType=VARCHAR},
      </if>
      <if test="optiond != null">
        #{optiond,jdbcType=VARCHAR},
      </if>
      <if test="optione != null">
        #{optione,jdbcType=VARCHAR},
      </if>
      <if test="optionf != null">
        #{optionf,jdbcType=VARCHAR},
      </if>
      <if test="optiong != null">
        #{optiong,jdbcType=VARCHAR},
      </if>
      <if test="answer != null">
        #{answer,jdbcType=VARCHAR},
      </if>
      <if test="difficulty != null">
        #{difficulty,jdbcType=INTEGER},
      </if>
      <if test="knowledge != null">
        #{knowledge,jdbcType=VARCHAR},
      </if>
      <if test="clue != null">
        #{clue,jdbcType=VARCHAR},
      </if>
      <if test="recDtime != null">
        #{recDtime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ulovecode.modules.entity.domain.ItemExample" resultType="java.lang.Integer">
    select count(*) from item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update item
    <set>
      <if test="record.itemId != null">
        item_id = #{record.itemId,jdbcType=INTEGER},
      </if>
      <if test="record.courseId != null">
        course_id = #{record.courseId,jdbcType=INTEGER},
      </if>
      <if test="record.itemType != null">
        item_type = #{record.itemType,jdbcType=VARCHAR},
      </if>
      <if test="record.question != null">
        question = #{record.question,jdbcType=VARCHAR},
      </if>
      <if test="record.optiona != null">
        optiona = #{record.optiona,jdbcType=VARCHAR},
      </if>
      <if test="record.optionb != null">
        optionb = #{record.optionb,jdbcType=VARCHAR},
      </if>
      <if test="record.optionc != null">
        optionc = #{record.optionc,jdbcType=VARCHAR},
      </if>
      <if test="record.optiond != null">
        optiond = #{record.optiond,jdbcType=VARCHAR},
      </if>
      <if test="record.optione != null">
        optione = #{record.optione,jdbcType=VARCHAR},
      </if>
      <if test="record.optionf != null">
        optionf = #{record.optionf,jdbcType=VARCHAR},
      </if>
      <if test="record.optiong != null">
        optiong = #{record.optiong,jdbcType=VARCHAR},
      </if>
      <if test="record.answer != null">
        answer = #{record.answer,jdbcType=VARCHAR},
      </if>
      <if test="record.difficulty != null">
        difficulty = #{record.difficulty,jdbcType=INTEGER},
      </if>
      <if test="record.knowledge != null">
        knowledge = #{record.knowledge,jdbcType=VARCHAR},
      </if>
      <if test="record.clue != null">
        clue = #{record.clue,jdbcType=VARCHAR},
      </if>
      <if test="record.recDtime != null">
        rec_dtime = #{record.recDtime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update item
    set item_id = #{record.itemId,jdbcType=INTEGER},
      course_id = #{record.courseId,jdbcType=INTEGER},
      item_type = #{record.itemType,jdbcType=VARCHAR},
      question = #{record.question,jdbcType=VARCHAR},
      optiona = #{record.optiona,jdbcType=VARCHAR},
      optionb = #{record.optionb,jdbcType=VARCHAR},
      optionc = #{record.optionc,jdbcType=VARCHAR},
      optiond = #{record.optiond,jdbcType=VARCHAR},
      optione = #{record.optione,jdbcType=VARCHAR},
      optionf = #{record.optionf,jdbcType=VARCHAR},
      optiong = #{record.optiong,jdbcType=VARCHAR},
      answer = #{record.answer,jdbcType=VARCHAR},
      difficulty = #{record.difficulty,jdbcType=INTEGER},
      knowledge = #{record.knowledge,jdbcType=VARCHAR},
      clue = #{record.clue,jdbcType=VARCHAR},
      rec_dtime = #{record.recDtime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ulovecode.modules.entity.domain.Item">
    update item
    <set>
      <if test="courseId != null">
        course_id = #{courseId,jdbcType=INTEGER},
      </if>
      <if test="itemType != null">
        item_type = #{itemType,jdbcType=VARCHAR},
      </if>
      <if test="question != null">
        question = #{question,jdbcType=VARCHAR},
      </if>
      <if test="optiona != null">
        optiona = #{optiona,jdbcType=VARCHAR},
      </if>
      <if test="optionb != null">
        optionb = #{optionb,jdbcType=VARCHAR},
      </if>
      <if test="optionc != null">
        optionc = #{optionc,jdbcType=VARCHAR},
      </if>
      <if test="optiond != null">
        optiond = #{optiond,jdbcType=VARCHAR},
      </if>
      <if test="optione != null">
        optione = #{optione,jdbcType=VARCHAR},
      </if>
      <if test="optionf != null">
        optionf = #{optionf,jdbcType=VARCHAR},
      </if>
      <if test="optiong != null">
        optiong = #{optiong,jdbcType=VARCHAR},
      </if>
      <if test="answer != null">
        answer = #{answer,jdbcType=VARCHAR},
      </if>
      <if test="difficulty != null">
        difficulty = #{difficulty,jdbcType=INTEGER},
      </if>
      <if test="knowledge != null">
        knowledge = #{knowledge,jdbcType=VARCHAR},
      </if>
      <if test="clue != null">
        clue = #{clue,jdbcType=VARCHAR},
      </if>
      <if test="recDtime != null">
        rec_dtime = #{recDtime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where item_id = #{itemId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ulovecode.modules.entity.domain.Item">
    update item
    set course_id = #{courseId,jdbcType=INTEGER},
      item_type = #{itemType,jdbcType=VARCHAR},
      question = #{question,jdbcType=VARCHAR},
      optiona = #{optiona,jdbcType=VARCHAR},
      optionb = #{optionb,jdbcType=VARCHAR},
      optionc = #{optionc,jdbcType=VARCHAR},
      optiond = #{optiond,jdbcType=VARCHAR},
      optione = #{optione,jdbcType=VARCHAR},
      optionf = #{optionf,jdbcType=VARCHAR},
      optiong = #{optiong,jdbcType=VARCHAR},
      answer = #{answer,jdbcType=VARCHAR},
      difficulty = #{difficulty,jdbcType=INTEGER},
      knowledge = #{knowledge,jdbcType=VARCHAR},
      clue = #{clue,jdbcType=VARCHAR},
      rec_dtime = #{recDtime,jdbcType=TIMESTAMP}
    where item_id = #{itemId,jdbcType=INTEGER}
  </update>
</mapper>